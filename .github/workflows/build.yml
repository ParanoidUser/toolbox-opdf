name: CI

on:
  push:
    branches-ignore: [ dependabot/** ]
  pull_request:
  workflow_dispatch:

jobs:
  test-project:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
        java: [ 17, 19 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: Setup Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven
      - name: Executable Maven Wrapper
        if: contains(matrix.os, 'win') == false
        run: chmod +x ./mvnw
      - name: Test project
        run: ./mvnw test

  quality-check:
    needs: test-project
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: Setup Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Initialize CodeQL
        uses: github/codeql-action/init@04df1262e6247151b5ac09cd2c303ac36ad3f62b
        with:
          languages: java
          queries: security-and-quality
      - name: Executable Maven Wrapper
        run: chmod +x ./mvnw
      - name: Compile project
        run: ./mvnw compile
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@04df1262e6247151b5ac09cd2c303ac36ad3f62b
      - name: Perform SonarCloud Analysis
        run: |
          ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_KEY }} \
            -Dsonar.branch.name=${{ github.event.inputs.ref_name || github.REF_NAME}} \
            -Dsonar.scm.disabled=true

  package-jars:
    needs: quality-check
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
      - name: Setup Java
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Executable Maven Wrapper
        run: chmod +x ./mvnw
      - name: Package project
        run: ./mvnw package -Passembly -DskipTests
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: opdf-jar
          path: ./opdf-assembly/target/opdf.jar

  build-native:
    needs: package-jars
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
        include:
          - os: ubuntu-22.04
            artifact_name: opdf
            package_name: opdf-linux
          - os: macos-12
            artifact_name: opdf
            package_name: opdf-macos
          - os: windows-2022
            artifact_name: opdf.exe
            package_name: opdf-windows
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: opdf-jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@40947ba8cebbdc4eb823a8d7a7b56f113746f8f7
        with:
          components: native-image
          version: 22.3.1
          java-version: 17
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build native image
        run: native-image --no-fallback -H:+AddAllCharsets -jar opdf.jar
      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: ${{ matrix.package_name }}
          path: ${{ matrix.artifact_name }}