name: CI

on:
  push:
    branches-ignore: [ dependabot/**, native ]
  pull_request:
  workflow_dispatch:

jobs:
  test-project:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java: [ 8, 11, 17 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Setup Java
        uses: actions/setup-java@9519cf1382ac8dc61ad461f7f7cb45f033220189
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}
          cache: maven
      - name: Executable Maven Wrapper
        if: contains(matrix.os, 'win') == false
        run: chmod +x ./mvnw
      - name: Test project
        run: ./mvnw test

  quality-check:
    needs: test-project
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Setup Java
        uses: actions/setup-java@9519cf1382ac8dc61ad461f7f7cb45f033220189
        with:
          distribution: adopt
          java-version: 11
          cache: maven
      - name: Initialize CodeQL
        uses: github/codeql-action/init@f5d217be74900c6ac8fbbe53f3c10376ba4e64da
        with:
          languages: java
          queries: security-and-quality
      - name: Executable Maven Wrapper
        run: chmod +x ./mvnw
      - name: Compile project
        run: ./mvnw compile
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@f5d217be74900c6ac8fbbe53f3c10376ba4e64da

  package-jars:
    needs: quality-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Setup Java
        uses: actions/setup-java@9519cf1382ac8dc61ad461f7f7cb45f033220189
        with:
          distribution: adopt
          java-version: 11
          cache: maven
      - name: Executable Maven Wrapper
        run: chmod +x ./mvnw
      - name: Package project
        run: ./mvnw package -Passembly -DskipTests
      - name: Upload artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: opdf-jar
          path: ./opdf-assembly/target/opdf.jar

  build-native:
    needs: package-jars
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            artifact_name: opdf
            package_name: opdf-linux
          - os: macos-latest
            artifact_name: opdf
            package_name: opdf-macos
          - os: windows-latest
            artifact_name: opdf.exe
            package_name: opdf-windows
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: opdf-jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@e82ef137ecc5af894d22d4a80243e3a057b5cc7f
        with:
          components: native-image
          version: dev
          java-version: 11
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build native image
        run: native-image --verbose -J-Xmx8g -jar opdf.jar
      - name: Upload artifacts
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: ${{ matrix.package_name }}
          path: ${{ matrix.artifact_name }}